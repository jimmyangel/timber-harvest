./ms.sh -i USATimberHarvest/S_USA.Activity_TimberHarvest.shp -filter 'ADMIN_FO_1 === "Willamette National Forest"' -filter-fields ADMIN_FO_1,SALE_NAME,ACTIVITY_2,ACTIVITY_N,DATE_PLANN,DATE_ACCOM,DATE_COMPL,GIS_ACRES -verbose -o format=geojson precision=0.0001 timber-or.json

mapshaper timber-or.json -each 'assignedId=this.id' -simplify 30% visvalingam keep-shapes -o format=geojson timber-or-s.json

### Not used anymore
## tippecanoe --layer=timberharvest --name=timberharvest --no-tile-compression --minimum-zoom=9 --maximum-zoom=14 --output-to-directory "vtiles" timber-or-s.json

http-server --cors='*' -g -p 9090

mapshaper VegetationStand/VegetationStand.shp -filter 'LAND_COVER==="FL" && OVRSTRY_YR < 1900 && PARTIAL_YR < 1900 && PRE_COM_YR < 1900 && SHLTRWD_YR < 1900 && COM_THN_YR < 1900' -filter-fields STAND,SIZE_CLASS,YR_ORIGIN -proj wgs84 -simplify 30% visvalingam keep-shapes -o format=geojson precision=0.0001 vegetationstand.json

tippecanoe --layer=vegetation --name=vegetation --no-tile-compression --minimum-zoom=9 --maximum-zoom=14 --output-to-directory "vtiles" vegetationstand.json

####### Add SUID (unique id for an activity area)

./ms.sh -i USATimberHarvest/S_USA.Activity_TimberHarvest.shp -filter 'ADMIN_FO_1 === "Willamette National Forest"' -filter-fields SUID,ADMIN_FO_1,SALE_NAME,ACTIVITY_N,DATE_PLANN,DATE_ACCOM,DATE_COMPL,GIS_ACRES -verbose -o format=geojson precision=0.0001 timber-or.json

######### Selection data
mapshaper timber-or-s.json -filter-fields assignedId,DATE_COMPL -o format=json timber-or-s-selection-data.json

### Simplify and reduce tile size
tippecanoe --layer=timberharvest --name=timberharvest --no-tile-compression --minimum-zoom=9 --maximum-zoom=14 --include=assignedId --simplification=20 --simplify-only-low-zooms --output-to-directory "vtiles" timber-or-s.json

### Generate info file
mapshaper timber-or-s.json -filter-fields assignedId,SALE_NAME,ACTIVITY_2,ACTIVITY_N,DATE_PLANN,DATE_ACCOM,DATE_COMPL,GIS_ACRES timber-or-s.json -o format=json timber-or-s-info.json

### Compare with Rosana's file

./ms.sh -i USATimberHarvest/S_USA.Activity_TimberHarvest.shp -filter 'ADMIN_FO_1 === "Willamette National Forest"' -filter-fields ADMIN_FO_1,SALE_NAME,ACTIVITY_N,DATE_PLANN,DATE_ACCOM,DATE_COMPL,GIS_ACRES,NBR_UNITS1 -verbose -o format=csv timber-willamette-list.csv

### Sequence for a forest
./ms.sh -i USATimberHarvest/S_USA.Activity_TimberHarvest.shp -filter 'ADMIN_FO_1 === "Umatilla National Forest"' -filter-fields ADMIN_FO_1,SALE_NAME,ACTIVITY_2,ACTIVITY_N,DATE_PLANN,DATE_ACCOM,DATE_COMPL,GIS_ACRES -verbose -o format=geojson precision=0.0001 timber-or.json

mapshaper timber-or.json -each 'assignedId=this.id' -simplify 30% visvalingam keep-shapes -o format=geojson timber-or-s.json

tippecanoe --layer=timberharvest --name=timberharvest --no-tile-compression --minimum-zoom=9 --maximum-zoom=14 --include=assignedId --simplification=20 --simplify-only-low-zooms --output-to-directory "vtiles/umatilla" timber-or-s.json

mapshaper timber-or-s.json -filter-fields assignedId,SALE_NAME,ACTIVITY_2,ACTIVITY_N,DATE_PLANN,DATE_ACCOM,DATE_COMPL,GIS_ACRES timber-or-s.json -o format=json vtiles/umatilla/timber-or-s-info.json

### fedcuts processing
mapshaper -i fedcuts/fedcuts.shp -proj wgs84 -verbose -o format=geojson precision=0.0001 fedcuts.json

node filterFedcuts.js > fedcuts_mounthood.json

tippecanoe --layer=fedcuts --name=fedcuts --no-tile-compression --minimum-zoom=9 --maximum-zoom=14 --simplification=20 --simplify-only-low-zooms --output-to-directory "fedcuts-vtiles/mounthood" fedcuts_mounthood.json

### Sequence for a BLM area
mapshaper -i BLM_logging/BLM_logging.shp -filter '(TRT_DATE != "") && ("ORR".indexOf(BLM_ORG_CD.substr(0,3)) > -1)' -filter-fields BLM_ORG_CD,TRT_NAME,HARV_RX,TRT_DATE,SALE_DATE,GIS_ACRES -verbose -o format=geojson precision=0.0001 blm-timber-or.json

mapshaper blm-timber-or.json -each 'assignedId=this.id' -simplify 30% visvalingam keep-shapes -o format=geojson blm-timber-or-s.json

tippecanoe --layer=timberharvest --name=timberharvest --no-tile-compression --minimum-zoom=9 --maximum-zoom=14 --include=assignedId --simplification=20 --simplify-only-low-zooms --output-to-directory "vtiles/blmwest" blm-timber-or-s.json

mapshaper blm-timber-or-s.json -filter-fields assignedId,BLM_ORG_CD,TRT_NAME,HARV_RX,TRT_DATE,SALE_DATE,GIS_ACRES -o format=json vtiles/blmwest/timber-or-s-info.json

### hansen processing
# Get Hansen
# Clip to Oregon
# Clip to Private
# Polygonize
# Simplify 30%
# clean
# filter remove-empty
# filter 'this.area>12000'
# export precision 0.0001

mapshaper hansen-private-polygons.json -each 'assignedId=this.id' -o format=geojson hansen-private-polygons-i.json

tippecanoe --layer=timberharvest --name=timberharvest --no-tile-compression --minimum-zoom=6 --maximum-zoom=14 --include=assignedId --simplification=20 --simplify-only-low-zooms --coalesce --maximum-tile-bytes=100000 --output-to-directory "hansen" hansen-private-polygons-i.json

mapshaper hansen-private-polygons-i.json -each 'GIS_ACRES=Math.round(this.area*0.000247105)' -filter-fields assignedId,YEAR,GIS_ACRES -o format=json hansen/timber-or-s-info.json

### hansen warm springs
mapshaper hansen-warm-springs.json -each 'assignedId=this.id' -o format=geojson hansen-warm-springs-i.json

tippecanoe --layer=timberharvest --name=timberharvest --no-tile-compression --minimum-zoom=6 --maximum-zoom=14 --include=assignedId --simplification=20 --simplify-only-low-zooms --coalesce --maximum-tile-bytes=100000 --output-to-directory "warm-springs" hansen-warm-springs-i.json

mapshaper hansen-warm-springs-i.json -each 'GIS_ACRES=Math.round(this.area*0.000247105)' -filter-fields assignedId,YEAR,GIS_ACRES -o format=json warm-springs/timber-or-s-info.json

### Merged private + warm springs
mapshaper hansen-private-state-tribal.json -each 'assignedId=this.id' -o format=geojson hansen-private-state-tribal-i.json

tippecanoe --layer=timberharvest --name=timberharvest --no-tile-compression --minimum-zoom=6 --maximum-zoom=14 --include=assignedId --simplification=20 --simplify-only-low-zooms --coalesce --maximum-tile-bytes=100000 --output-to-directory "hansen" hansen-private-state-tribal-i.json

mapshaper hansen-private-state-tribal-i.json -each 'GIS_ACRES=Math.round(this.area*0.000247105)' -filter-fields assignedId,YEAR,GIS_ACRES -o format=json hansen/timber-or-s-info.json

### update fedcuts
# Take the original fedcuts
# Merge filtered NF and BLM data (see filter below to pick only clearcuts)
  # National Forests filter
  # "STATE_ABBR" = 'OR'  AND "FY_COMPLET" > '' AND "ACTIVITY_2" IN ('4101','4102','4111','4113','4121','4131','4132','4141','4142','4143','4145','4146','4162','4175','4177','4183','4193','4194','4196','4232')

  # BLM filter
  # "HARV_RX" IN ('Clearcut', 'Patch Cut', 'Regeneration')
# Export and use mapshaper dissolve2 and explode to flatten shapes (remove overlapping polygons)
